// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/dtako_rows.proto

package dtako

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetRowDetail用のリクエスト
type GetRowDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // 運行NO (dtako_row_id)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRowDetailRequest) Reset() {
	*x = GetRowDetailRequest{}
	mi := &file_proto_dtako_rows_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRowDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRowDetailRequest) ProtoMessage() {}

func (x *GetRowDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRowDetailRequest.ProtoReflect.Descriptor instead.
func (*GetRowDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{0}
}

func (x *GetRowDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// GetRowDetail用のレスポンス（view機能の全データ）
type GetRowDetailResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 運行データ本体
	DtakoRow *Row `protobuf:"bytes,1,opt,name=dtako_row,json=dtakoRow,proto3" json:"dtako_row,omitempty"`
	// イベントデータ
	Events []*Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	// 積み・降しペア
	TsumiOroshiPairs []*TsumiOroshiPair `protobuf:"bytes,3,rep,name=tsumi_oroshi_pairs,json=tsumiOroshiPairs,proto3" json:"tsumi_oroshi_pairs,omitempty"`
	// 前後の運行データ
	DtakoLast *Row `protobuf:"bytes,4,opt,name=dtako_last,json=dtakoLast,proto3" json:"dtako_last,omitempty"`
	DtakoNext *Row `protobuf:"bytes,5,opt,name=dtako_next,json=dtakoNext,proto3" json:"dtako_next,omitempty"`
	// 次が降し最初かどうか
	IsNextOroshiFst *Event `protobuf:"bytes,6,opt,name=is_next_oroshi_fst,json=isNextOroshiFst,proto3" json:"is_next_oroshi_fst,omitempty"`
	// 前が積み最後かどうか
	IsLastOroshiLast *Event `protobuf:"bytes,7,opt,name=is_last_oroshi_last,json=isLastOroshiLast,proto3" json:"is_last_oroshi_last,omitempty"`
	// ETCデータ（旧DtakoEtc）
	Detc []*EtcData `protobuf:"bytes,8,rep,name=detc,proto3" json:"detc,omitempty"`
	// ETCデータ（新EtcMeisai）
	Ddetc          []*EtcMeisaiData `protobuf:"bytes,9,rep,name=ddetc,proto3" json:"ddetc,omitempty"`
	DdetcSrchCount int32            `protobuf:"varint,10,opt,name=ddetc_srch_count,json=ddetcSrchCount,proto3" json:"ddetc_srch_count,omitempty"`
	// フェリーデータ
	Dferry []*FerryData `protobuf:"bytes,11,rep,name=dferry,proto3" json:"dferry,omitempty"`
	// 一番星データ
	IchiR []*IchibanData `protobuf:"bytes,12,rep,name=ichi_r,json=ichiR,proto3" json:"ichi_r,omitempty"`
	// 経費データ
	Keihi []*KeihiData `protobuf:"bytes,13,rep,name=keihi,proto3" json:"keihi,omitempty"`
	// 売上経費データ
	DUriage []*UriageKeihiData `protobuf:"bytes,14,rep,name=d_uriage,json=dUriage,proto3" json:"d_uriage,omitempty"`
	// 料費データ
	RyohiRows []*RyohiRow `protobuf:"bytes,15,rep,name=ryohi_rows,json=ryohiRows,proto3" json:"ryohi_rows,omitempty"`
	// 燃料単価
	FuelTanka *FuelTanka `protobuf:"bytes,16,opt,name=fuel_tanka,json=fuelTanka,proto3" json:"fuel_tanka,omitempty"`
	// 積み降しイベント一覧
	TsumiOroshi   []*Event `protobuf:"bytes,17,rep,name=tsumi_oroshi,json=tsumiOroshi,proto3" json:"tsumi_oroshi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRowDetailResponse) Reset() {
	*x = GetRowDetailResponse{}
	mi := &file_proto_dtako_rows_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRowDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRowDetailResponse) ProtoMessage() {}

func (x *GetRowDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRowDetailResponse.ProtoReflect.Descriptor instead.
func (*GetRowDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{1}
}

func (x *GetRowDetailResponse) GetDtakoRow() *Row {
	if x != nil {
		return x.DtakoRow
	}
	return nil
}

func (x *GetRowDetailResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetRowDetailResponse) GetTsumiOroshiPairs() []*TsumiOroshiPair {
	if x != nil {
		return x.TsumiOroshiPairs
	}
	return nil
}

func (x *GetRowDetailResponse) GetDtakoLast() *Row {
	if x != nil {
		return x.DtakoLast
	}
	return nil
}

func (x *GetRowDetailResponse) GetDtakoNext() *Row {
	if x != nil {
		return x.DtakoNext
	}
	return nil
}

func (x *GetRowDetailResponse) GetIsNextOroshiFst() *Event {
	if x != nil {
		return x.IsNextOroshiFst
	}
	return nil
}

func (x *GetRowDetailResponse) GetIsLastOroshiLast() *Event {
	if x != nil {
		return x.IsLastOroshiLast
	}
	return nil
}

func (x *GetRowDetailResponse) GetDetc() []*EtcData {
	if x != nil {
		return x.Detc
	}
	return nil
}

func (x *GetRowDetailResponse) GetDdetc() []*EtcMeisaiData {
	if x != nil {
		return x.Ddetc
	}
	return nil
}

func (x *GetRowDetailResponse) GetDdetcSrchCount() int32 {
	if x != nil {
		return x.DdetcSrchCount
	}
	return 0
}

func (x *GetRowDetailResponse) GetDferry() []*FerryData {
	if x != nil {
		return x.Dferry
	}
	return nil
}

func (x *GetRowDetailResponse) GetIchiR() []*IchibanData {
	if x != nil {
		return x.IchiR
	}
	return nil
}

func (x *GetRowDetailResponse) GetKeihi() []*KeihiData {
	if x != nil {
		return x.Keihi
	}
	return nil
}

func (x *GetRowDetailResponse) GetDUriage() []*UriageKeihiData {
	if x != nil {
		return x.DUriage
	}
	return nil
}

func (x *GetRowDetailResponse) GetRyohiRows() []*RyohiRow {
	if x != nil {
		return x.RyohiRows
	}
	return nil
}

func (x *GetRowDetailResponse) GetFuelTanka() *FuelTanka {
	if x != nil {
		return x.FuelTanka
	}
	return nil
}

func (x *GetRowDetailResponse) GetTsumiOroshi() []*Event {
	if x != nil {
		return x.TsumiOroshi
	}
	return nil
}

// 積み・降しペア
type TsumiOroshiPair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tsumi         *Event                 `protobuf:"bytes,1,opt,name=tsumi,proto3" json:"tsumi,omitempty"`   // 積みイベント
	Oroshi        *Event                 `protobuf:"bytes,2,opt,name=oroshi,proto3" json:"oroshi,omitempty"` // 降しイベント
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TsumiOroshiPair) Reset() {
	*x = TsumiOroshiPair{}
	mi := &file_proto_dtako_rows_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TsumiOroshiPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TsumiOroshiPair) ProtoMessage() {}

func (x *TsumiOroshiPair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TsumiOroshiPair.ProtoReflect.Descriptor instead.
func (*TsumiOroshiPair) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{2}
}

func (x *TsumiOroshiPair) GetTsumi() *Event {
	if x != nil {
		return x.Tsumi
	}
	return nil
}

func (x *TsumiOroshiPair) GetOroshi() *Event {
	if x != nil {
		return x.Oroshi
	}
	return nil
}

// 運行データ
type Row struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                            // 主キー
	UnkoNo        string                 `protobuf:"bytes,2,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`                      // 運行NO
	Shaban        string                 `protobuf:"bytes,3,opt,name=shaban,proto3" json:"shaban,omitempty"`                                    // 車番（車輌CC）
	DriverId      string                 `protobuf:"bytes,4,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`                // 運転手ID（乗務員CD1）
	StartDatetime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_datetime,json=startDatetime,proto3" json:"start_datetime,omitempty"` // 出庫日時
	EndDatetime   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_datetime,json=endDatetime,proto3" json:"end_datetime,omitempty"`       // 帰庫日時
	Distance      float64                `protobuf:"fixed64,7,opt,name=distance,proto3" json:"distance,omitempty"`                              // 走行距離
	FuelUsed      float64                `protobuf:"fixed64,8,opt,name=fuel_used,json=fuelUsed,proto3" json:"fuel_used,omitempty"`              // 燃料使用量
	// 追加フィールド
	SharyouCc          string                 `protobuf:"bytes,9,opt,name=sharyou_cc,json=sharyouCc,proto3" json:"sharyou_cc,omitempty"`                                // 車輌CC
	JomuinCd1          string                 `protobuf:"bytes,10,opt,name=jomuin_cd1,json=jomuinCd1,proto3" json:"jomuin_cd1,omitempty"`                               // 乗務員CD1
	TaishouJomuinKubun int32                  `protobuf:"varint,11,opt,name=taishou_jomuin_kubun,json=taishouJomuinKubun,proto3" json:"taishou_jomuin_kubun,omitempty"` // 対象乗務員区分
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// リレーション
	Events        []*Event `protobuf:"bytes,30,rep,name=events,proto3" json:"events,omitempty"`
	Driver        *Driver  `protobuf:"bytes,31,opt,name=driver,proto3" json:"driver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Row) Reset() {
	*x = Row{}
	mi := &file_proto_dtako_rows_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{3}
}

func (x *Row) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Row) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

func (x *Row) GetShaban() string {
	if x != nil {
		return x.Shaban
	}
	return ""
}

func (x *Row) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *Row) GetStartDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDatetime
	}
	return nil
}

func (x *Row) GetEndDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDatetime
	}
	return nil
}

func (x *Row) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Row) GetFuelUsed() float64 {
	if x != nil {
		return x.FuelUsed
	}
	return 0
}

func (x *Row) GetSharyouCc() string {
	if x != nil {
		return x.SharyouCc
	}
	return ""
}

func (x *Row) GetJomuinCd1() string {
	if x != nil {
		return x.JomuinCd1
	}
	return ""
}

func (x *Row) GetTaishouJomuinKubun() int32 {
	if x != nil {
		return x.TaishouJomuinKubun
	}
	return 0
}

func (x *Row) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Row) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Row) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Row) GetDriver() *Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

// 運転手マスタ（dtako_rows専用）
type Driver struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // 社員コード
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 社員名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Driver) Reset() {
	*x = Driver{}
	mi := &file_proto_dtako_rows_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Driver.ProtoReflect.Descriptor instead.
func (*Driver) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{4}
}

func (x *Driver) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Driver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ETCデータ（旧DtakoEtc）
type EtcData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UnkoNo        string                 `protobuf:"bytes,2,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`
	StartDatetime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_datetime,json=startDatetime,proto3" json:"start_datetime,omitempty"`
	EndDatetime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_datetime,json=endDatetime,proto3" json:"end_datetime,omitempty"`
	Etc           int32                  `protobuf:"varint,5,opt,name=etc,proto3" json:"etc,omitempty"`
	// 積みデータのマップ（srch_id => 表示文字列）
	Tsumi         map[string]string `protobuf:"bytes,10,rep,name=tsumi,proto3" json:"tsumi,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EtcData) Reset() {
	*x = EtcData{}
	mi := &file_proto_dtako_rows_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcData) ProtoMessage() {}

func (x *EtcData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcData.ProtoReflect.Descriptor instead.
func (*EtcData) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{5}
}

func (x *EtcData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EtcData) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

func (x *EtcData) GetStartDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDatetime
	}
	return nil
}

func (x *EtcData) GetEndDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDatetime
	}
	return nil
}

func (x *EtcData) GetEtc() int32 {
	if x != nil {
		return x.Etc
	}
	return 0
}

func (x *EtcData) GetTsumi() map[string]string {
	if x != nil {
		return x.Tsumi
	}
	return nil
}

// ETCデータ（新EtcMeisai）
type EtcMeisaiData struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DtakoRowId string                 `protobuf:"bytes,2,opt,name=dtako_row_id,json=dtakoRowId,proto3" json:"dtako_row_id,omitempty"`
	DateFr     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_fr,json=dateFr,proto3" json:"date_fr,omitempty"`
	DateTo     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	Kingaku    int32                  `protobuf:"varint,5,opt,name=kingaku,proto3" json:"kingaku,omitempty"`
	// 自社データかどうか（1=自社, 0=配車都合/乗務員都合）
	Jisha int32 `protobuf:"varint,10,opt,name=jisha,proto3" json:"jisha,omitempty"`
	// 積みデータのマップ
	Tsumi map[string]string `protobuf:"bytes,11,rep,name=tsumi,proto3" json:"tsumi,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 売上経費データ
	DtakoUriageKeihi *UriageKeihiData `protobuf:"bytes,12,opt,name=dtako_uriage_keihi,json=dtakoUriageKeihi,proto3" json:"dtako_uriage_keihi,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EtcMeisaiData) Reset() {
	*x = EtcMeisaiData{}
	mi := &file_proto_dtako_rows_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EtcMeisaiData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EtcMeisaiData) ProtoMessage() {}

func (x *EtcMeisaiData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EtcMeisaiData.ProtoReflect.Descriptor instead.
func (*EtcMeisaiData) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{6}
}

func (x *EtcMeisaiData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EtcMeisaiData) GetDtakoRowId() string {
	if x != nil {
		return x.DtakoRowId
	}
	return ""
}

func (x *EtcMeisaiData) GetDateFr() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFr
	}
	return nil
}

func (x *EtcMeisaiData) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

func (x *EtcMeisaiData) GetKingaku() int32 {
	if x != nil {
		return x.Kingaku
	}
	return 0
}

func (x *EtcMeisaiData) GetJisha() int32 {
	if x != nil {
		return x.Jisha
	}
	return 0
}

func (x *EtcMeisaiData) GetTsumi() map[string]string {
	if x != nil {
		return x.Tsumi
	}
	return nil
}

func (x *EtcMeisaiData) GetDtakoUriageKeihi() *UriageKeihiData {
	if x != nil {
		return x.DtakoUriageKeihi
	}
	return nil
}

// フェリーデータ
type FerryData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UnkoNo        string                 `protobuf:"bytes,2,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`
	StartDatetime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_datetime,json=startDatetime,proto3" json:"start_datetime,omitempty"`
	EndDatetime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_datetime,json=endDatetime,proto3" json:"end_datetime,omitempty"`
	FerryName     string                 `protobuf:"bytes,5,opt,name=ferry_name,json=ferryName,proto3" json:"ferry_name,omitempty"`
	Kingaku       int32                  `protobuf:"varint,6,opt,name=kingaku,proto3" json:"kingaku,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FerryData) Reset() {
	*x = FerryData{}
	mi := &file_proto_dtako_rows_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FerryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FerryData) ProtoMessage() {}

func (x *FerryData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FerryData.ProtoReflect.Descriptor instead.
func (*FerryData) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{7}
}

func (x *FerryData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FerryData) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

func (x *FerryData) GetStartDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDatetime
	}
	return nil
}

func (x *FerryData) GetEndDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDatetime
	}
	return nil
}

func (x *FerryData) GetFerryName() string {
	if x != nil {
		return x.FerryName
	}
	return ""
}

func (x *FerryData) GetKingaku() int32 {
	if x != nil {
		return x.Kingaku
	}
	return 0
}

// 一番星データ
type IchibanData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SharyouCc        string                 `protobuf:"bytes,1,opt,name=sharyou_cc,json=sharyouCc,proto3" json:"sharyou_cc,omitempty"`                         // 車輌CC
	TsumikomiYmd     string                 `protobuf:"bytes,2,opt,name=tsumikomi_ymd,json=tsumikomiYmd,proto3" json:"tsumikomi_ymd,omitempty"`                // 積込年月日
	UnkoYmd          string                 `protobuf:"bytes,3,opt,name=unko_ymd,json=unkoYmd,proto3" json:"unko_ymd,omitempty"`                               // 運行年月日
	NounyuuYmd       string                 `protobuf:"bytes,4,opt,name=nounyuu_ymd,json=nounyuuYmd,proto3" json:"nounyuu_ymd,omitempty"`                      // 納入年月日
	HatsuchiN        string                 `protobuf:"bytes,5,opt,name=hatsuchi_n,json=hatsuchiN,proto3" json:"hatsuchi_n,omitempty"`                         // 発地N
	ChakuchiN        string                 `protobuf:"bytes,6,opt,name=chakuchi_n,json=chakuchiN,proto3" json:"chakuchi_n,omitempty"`                         // 着地N
	HinmeiN          string                 `protobuf:"bytes,7,opt,name=hinmei_n,json=hinmeiN,proto3" json:"hinmei_n,omitempty"`                               // 品名N
	TokuisakiN       string                 `protobuf:"bytes,8,opt,name=tokuisaki_n,json=tokuisakiN,proto3" json:"tokuisaki_n,omitempty"`                      // 得意先N
	TokuisakiCc      string                 `protobuf:"bytes,9,opt,name=tokuisaki_cc,json=tokuisakiCc,proto3" json:"tokuisaki_cc,omitempty"`                   // 得意先CC
	Biko             string                 `protobuf:"bytes,10,opt,name=biko,proto3" json:"biko,omitempty"`                                                   // 備考
	Biko2            string                 `protobuf:"bytes,11,opt,name=biko2,proto3" json:"biko2,omitempty"`                                                 // 備考2
	SeikyuK          int32                  `protobuf:"varint,12,opt,name=seikyu_k,json=seikyuK,proto3" json:"seikyu_k,omitempty"`                             // 請求K
	ShainN           string                 `protobuf:"bytes,13,opt,name=shain_n,json=shainN,proto3" json:"shain_n,omitempty"`                                 // 社員N（運転手）
	UntenshC         string                 `protobuf:"bytes,14,opt,name=untensh_c,json=untenshC,proto3" json:"untensh_c,omitempty"`                           // 運転手C
	Kingaku          int32                  `protobuf:"varint,15,opt,name=kingaku,proto3" json:"kingaku,omitempty"`                                            // 金額
	Nebiki           int32                  `protobuf:"varint,16,opt,name=nebiki,proto3" json:"nebiki,omitempty"`                                              // 値引
	Warimashi        int32                  `protobuf:"varint,17,opt,name=warimashi,proto3" json:"warimashi,omitempty"`                                        // 割増
	Jippi            int32                  `protobuf:"varint,18,opt,name=jippi,proto3" json:"jippi,omitempty"`                                                // 実費
	NyuuryokuTantouN string                 `protobuf:"bytes,19,opt,name=nyuuryoku_tantou_n,json=nyuuryokuTantouN,proto3" json:"nyuuryoku_tantou_n,omitempty"` // 入力担当N
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IchibanData) Reset() {
	*x = IchibanData{}
	mi := &file_proto_dtako_rows_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IchibanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IchibanData) ProtoMessage() {}

func (x *IchibanData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IchibanData.ProtoReflect.Descriptor instead.
func (*IchibanData) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{8}
}

func (x *IchibanData) GetSharyouCc() string {
	if x != nil {
		return x.SharyouCc
	}
	return ""
}

func (x *IchibanData) GetTsumikomiYmd() string {
	if x != nil {
		return x.TsumikomiYmd
	}
	return ""
}

func (x *IchibanData) GetUnkoYmd() string {
	if x != nil {
		return x.UnkoYmd
	}
	return ""
}

func (x *IchibanData) GetNounyuuYmd() string {
	if x != nil {
		return x.NounyuuYmd
	}
	return ""
}

func (x *IchibanData) GetHatsuchiN() string {
	if x != nil {
		return x.HatsuchiN
	}
	return ""
}

func (x *IchibanData) GetChakuchiN() string {
	if x != nil {
		return x.ChakuchiN
	}
	return ""
}

func (x *IchibanData) GetHinmeiN() string {
	if x != nil {
		return x.HinmeiN
	}
	return ""
}

func (x *IchibanData) GetTokuisakiN() string {
	if x != nil {
		return x.TokuisakiN
	}
	return ""
}

func (x *IchibanData) GetTokuisakiCc() string {
	if x != nil {
		return x.TokuisakiCc
	}
	return ""
}

func (x *IchibanData) GetBiko() string {
	if x != nil {
		return x.Biko
	}
	return ""
}

func (x *IchibanData) GetBiko2() string {
	if x != nil {
		return x.Biko2
	}
	return ""
}

func (x *IchibanData) GetSeikyuK() int32 {
	if x != nil {
		return x.SeikyuK
	}
	return 0
}

func (x *IchibanData) GetShainN() string {
	if x != nil {
		return x.ShainN
	}
	return ""
}

func (x *IchibanData) GetUntenshC() string {
	if x != nil {
		return x.UntenshC
	}
	return ""
}

func (x *IchibanData) GetKingaku() int32 {
	if x != nil {
		return x.Kingaku
	}
	return 0
}

func (x *IchibanData) GetNebiki() int32 {
	if x != nil {
		return x.Nebiki
	}
	return 0
}

func (x *IchibanData) GetWarimashi() int32 {
	if x != nil {
		return x.Warimashi
	}
	return 0
}

func (x *IchibanData) GetJippi() int32 {
	if x != nil {
		return x.Jippi
	}
	return 0
}

func (x *IchibanData) GetNyuuryokuTantouN() string {
	if x != nil {
		return x.NyuuryokuTantouN
	}
	return ""
}

// 経費データ
type KeihiData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SharyouCc     string                 `protobuf:"bytes,1,opt,name=sharyou_cc,json=sharyouCc,proto3" json:"sharyou_cc,omitempty"`             // 車輌CC
	UnkoYmd       string                 `protobuf:"bytes,2,opt,name=unko_ymd,json=unkoYmd,proto3" json:"unko_ymd,omitempty"`                   // 運行年月日
	KeijouYmd     string                 `protobuf:"bytes,3,opt,name=keijou_ymd,json=keijouYmd,proto3" json:"keijou_ymd,omitempty"`             // 計上年月日
	Suuryou       float64                `protobuf:"fixed64,4,opt,name=suuryou,proto3" json:"suuryou,omitempty"`                                // 数量
	Tanka         float64                `protobuf:"fixed64,5,opt,name=tanka,proto3" json:"tanka,omitempty"`                                    // 単価
	Kingaku       int32                  `protobuf:"varint,6,opt,name=kingaku,proto3" json:"kingaku,omitempty"`                                 // 金額
	Biko          string                 `protobuf:"bytes,7,opt,name=biko,proto3" json:"biko,omitempty"`                                        // 備考
	KeihiN        string                 `protobuf:"bytes,8,opt,name=keihi_n,json=keihiN,proto3" json:"keihi_n,omitempty"`                      // 経費N
	KeihiC        string                 `protobuf:"bytes,9,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`                      // 経費C
	MiharaiSakiN  string                 `protobuf:"bytes,10,opt,name=miharai_saki_n,json=miharaiSakiN,proto3" json:"miharai_saki_n,omitempty"` // 未払先N
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeihiData) Reset() {
	*x = KeihiData{}
	mi := &file_proto_dtako_rows_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeihiData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeihiData) ProtoMessage() {}

func (x *KeihiData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeihiData.ProtoReflect.Descriptor instead.
func (*KeihiData) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{9}
}

func (x *KeihiData) GetSharyouCc() string {
	if x != nil {
		return x.SharyouCc
	}
	return ""
}

func (x *KeihiData) GetUnkoYmd() string {
	if x != nil {
		return x.UnkoYmd
	}
	return ""
}

func (x *KeihiData) GetKeijouYmd() string {
	if x != nil {
		return x.KeijouYmd
	}
	return ""
}

func (x *KeihiData) GetSuuryou() float64 {
	if x != nil {
		return x.Suuryou
	}
	return 0
}

func (x *KeihiData) GetTanka() float64 {
	if x != nil {
		return x.Tanka
	}
	return 0
}

func (x *KeihiData) GetKingaku() int32 {
	if x != nil {
		return x.Kingaku
	}
	return 0
}

func (x *KeihiData) GetBiko() string {
	if x != nil {
		return x.Biko
	}
	return ""
}

func (x *KeihiData) GetKeihiN() string {
	if x != nil {
		return x.KeihiN
	}
	return ""
}

func (x *KeihiData) GetKeihiC() string {
	if x != nil {
		return x.KeihiC
	}
	return ""
}

func (x *KeihiData) GetMiharaiSakiN() string {
	if x != nil {
		return x.MiharaiSakiN
	}
	return ""
}

// 売上経費データ
type UriageKeihiData struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	SrchId     string                 `protobuf:"bytes,1,opt,name=srch_id,json=srchId,proto3" json:"srch_id,omitempty"`
	DtakoRowId string                 `protobuf:"bytes,2,opt,name=dtako_row_id,json=dtakoRowId,proto3" json:"dtako_row_id,omitempty"`
	KeihiC     int32                  `protobuf:"varint,3,opt,name=keihi_c,json=keihiC,proto3" json:"keihi_c,omitempty"`
	Datetime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Kingaku    int32                  `protobuf:"varint,5,opt,name=kingaku,proto3" json:"kingaku,omitempty"`
	// 子データ
	Children      []*UriageKeihiChild `protobuf:"bytes,10,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UriageKeihiData) Reset() {
	*x = UriageKeihiData{}
	mi := &file_proto_dtako_rows_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UriageKeihiData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UriageKeihiData) ProtoMessage() {}

func (x *UriageKeihiData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UriageKeihiData.ProtoReflect.Descriptor instead.
func (*UriageKeihiData) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{10}
}

func (x *UriageKeihiData) GetSrchId() string {
	if x != nil {
		return x.SrchId
	}
	return ""
}

func (x *UriageKeihiData) GetDtakoRowId() string {
	if x != nil {
		return x.DtakoRowId
	}
	return ""
}

func (x *UriageKeihiData) GetKeihiC() int32 {
	if x != nil {
		return x.KeihiC
	}
	return 0
}

func (x *UriageKeihiData) GetDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.Datetime
	}
	return nil
}

func (x *UriageKeihiData) GetKingaku() int32 {
	if x != nil {
		return x.Kingaku
	}
	return 0
}

func (x *UriageKeihiData) GetChildren() []*UriageKeihiChild {
	if x != nil {
		return x.Children
	}
	return nil
}

// 売上経費子データ
type UriageKeihiChild struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentSrchId  string                 `protobuf:"bytes,2,opt,name=parent_srch_id,json=parentSrchId,proto3" json:"parent_srch_id,omitempty"`
	DtakoRowId    string                 `protobuf:"bytes,3,opt,name=dtako_row_id,json=dtakoRowId,proto3" json:"dtako_row_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UriageKeihiChild) Reset() {
	*x = UriageKeihiChild{}
	mi := &file_proto_dtako_rows_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UriageKeihiChild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UriageKeihiChild) ProtoMessage() {}

func (x *UriageKeihiChild) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UriageKeihiChild.ProtoReflect.Descriptor instead.
func (*UriageKeihiChild) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{11}
}

func (x *UriageKeihiChild) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UriageKeihiChild) GetParentSrchId() string {
	if x != nil {
		return x.ParentSrchId
	}
	return ""
}

func (x *UriageKeihiChild) GetDtakoRowId() string {
	if x != nil {
		return x.DtakoRowId
	}
	return ""
}

// 料費データ
type RyohiRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UnkoNo        string                 `protobuf:"bytes,2,opt,name=unko_no,json=unkoNo,proto3" json:"unko_no,omitempty"`
	TsumiDate     string                 `protobuf:"bytes,3,opt,name=tsumi_date,json=tsumiDate,proto3" json:"tsumi_date,omitempty"`
	OroshiDate    string                 `protobuf:"bytes,4,opt,name=oroshi_date,json=oroshiDate,proto3" json:"oroshi_date,omitempty"`
	Tokuisaki     string                 `protobuf:"bytes,5,opt,name=tokuisaki,proto3" json:"tokuisaki,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RyohiRow) Reset() {
	*x = RyohiRow{}
	mi := &file_proto_dtako_rows_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RyohiRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RyohiRow) ProtoMessage() {}

func (x *RyohiRow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RyohiRow.ProtoReflect.Descriptor instead.
func (*RyohiRow) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{12}
}

func (x *RyohiRow) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RyohiRow) GetUnkoNo() string {
	if x != nil {
		return x.UnkoNo
	}
	return ""
}

func (x *RyohiRow) GetTsumiDate() string {
	if x != nil {
		return x.TsumiDate
	}
	return ""
}

func (x *RyohiRow) GetOroshiDate() string {
	if x != nil {
		return x.OroshiDate
	}
	return ""
}

func (x *RyohiRow) GetTokuisaki() string {
	if x != nil {
		return x.Tokuisaki
	}
	return ""
}

func (x *RyohiRow) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RyohiRow) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RyohiRow) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// 燃料単価
type FuelTanka struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MonthInt      int32                  `protobuf:"varint,1,opt,name=month_int,json=monthInt,proto3" json:"month_int,omitempty"` // 月（yyMM形式の整数）
	Tanka         float64                `protobuf:"fixed64,2,opt,name=tanka,proto3" json:"tanka,omitempty"`                      // 単価
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FuelTanka) Reset() {
	*x = FuelTanka{}
	mi := &file_proto_dtako_rows_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FuelTanka) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuelTanka) ProtoMessage() {}

func (x *FuelTanka) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuelTanka.ProtoReflect.Descriptor instead.
func (*FuelTanka) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{13}
}

func (x *FuelTanka) GetMonthInt() int32 {
	if x != nil {
		return x.MonthInt
	}
	return 0
}

func (x *FuelTanka) GetTanka() float64 {
	if x != nil {
		return x.Tanka
	}
	return 0
}

// 基本CRUD用のメッセージ
type CreateRowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Row           *Row                   `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRowRequest) Reset() {
	*x = CreateRowRequest{}
	mi := &file_proto_dtako_rows_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRowRequest) ProtoMessage() {}

func (x *CreateRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRowRequest.ProtoReflect.Descriptor instead.
func (*CreateRowRequest) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{14}
}

func (x *CreateRowRequest) GetRow() *Row {
	if x != nil {
		return x.Row
	}
	return nil
}

type GetRowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRowRequest) Reset() {
	*x = GetRowRequest{}
	mi := &file_proto_dtako_rows_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRowRequest) ProtoMessage() {}

func (x *GetRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRowRequest.ProtoReflect.Descriptor instead.
func (*GetRowRequest) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{15}
}

func (x *GetRowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateRowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Row           *Row                   `protobuf:"bytes,1,opt,name=row,proto3" json:"row,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRowRequest) Reset() {
	*x = UpdateRowRequest{}
	mi := &file_proto_dtako_rows_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRowRequest) ProtoMessage() {}

func (x *UpdateRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRowRequest.ProtoReflect.Descriptor instead.
func (*UpdateRowRequest) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateRowRequest) GetRow() *Row {
	if x != nil {
		return x.Row
	}
	return nil
}

type DeleteRowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRowRequest) Reset() {
	*x = DeleteRowRequest{}
	mi := &file_proto_dtako_rows_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRowRequest) ProtoMessage() {}

func (x *DeleteRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRowRequest.ProtoReflect.Descriptor instead.
func (*DeleteRowRequest) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteRowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRowResponse) Reset() {
	*x = DeleteRowResponse{}
	mi := &file_proto_dtako_rows_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRowResponse) ProtoMessage() {}

func (x *DeleteRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRowResponse.ProtoReflect.Descriptor instead.
func (*DeleteRowResponse) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteRowResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Filter        string                 `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRowsRequest) Reset() {
	*x = ListRowsRequest{}
	mi := &file_proto_dtako_rows_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRowsRequest) ProtoMessage() {}

func (x *ListRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRowsRequest.ProtoReflect.Descriptor instead.
func (*ListRowsRequest) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{19}
}

func (x *ListRowsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListRowsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRowsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListRowsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*Row                 `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRowsResponse) Reset() {
	*x = ListRowsResponse{}
	mi := &file_proto_dtako_rows_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRowsResponse) ProtoMessage() {}

func (x *ListRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRowsResponse.ProtoReflect.Descriptor instead.
func (*ListRowsResponse) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{20}
}

func (x *ListRowsResponse) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ListRowsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchRowsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	DriverId      string                 `protobuf:"bytes,3,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	Shaban        string                 `protobuf:"bytes,4,opt,name=shaban,proto3" json:"shaban,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRowsRequest) Reset() {
	*x = SearchRowsRequest{}
	mi := &file_proto_dtako_rows_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRowsRequest) ProtoMessage() {}

func (x *SearchRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRowsRequest.ProtoReflect.Descriptor instead.
func (*SearchRowsRequest) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{21}
}

func (x *SearchRowsRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *SearchRowsRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

func (x *SearchRowsRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *SearchRowsRequest) GetShaban() string {
	if x != nil {
		return x.Shaban
	}
	return ""
}

type ShabanSearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shaban        string                 `protobuf:"bytes,1,opt,name=shaban,proto3" json:"shaban,omitempty"`
	DateFrom      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShabanSearchRequest) Reset() {
	*x = ShabanSearchRequest{}
	mi := &file_proto_dtako_rows_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShabanSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShabanSearchRequest) ProtoMessage() {}

func (x *ShabanSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dtako_rows_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShabanSearchRequest.ProtoReflect.Descriptor instead.
func (*ShabanSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_dtako_rows_proto_rawDescGZIP(), []int{22}
}

func (x *ShabanSearchRequest) GetShaban() string {
	if x != nil {
		return x.Shaban
	}
	return ""
}

func (x *ShabanSearchRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *ShabanSearchRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

var File_proto_dtako_rows_proto protoreflect.FileDescriptor

const file_proto_dtako_rows_proto_rawDesc = "" +
	"\n" +
	"\x16proto/dtako_rows.proto\x12\x05dtako\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x18proto/dtako_events.proto\"%\n" +
	"\x13GetRowDetailRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xb5\x06\n" +
	"\x14GetRowDetailResponse\x12'\n" +
	"\tdtako_row\x18\x01 \x01(\v2\n" +
	".dtako.RowR\bdtakoRow\x12$\n" +
	"\x06events\x18\x02 \x03(\v2\f.dtako.EventR\x06events\x12D\n" +
	"\x12tsumi_oroshi_pairs\x18\x03 \x03(\v2\x16.dtako.TsumiOroshiPairR\x10tsumiOroshiPairs\x12)\n" +
	"\n" +
	"dtako_last\x18\x04 \x01(\v2\n" +
	".dtako.RowR\tdtakoLast\x12)\n" +
	"\n" +
	"dtako_next\x18\x05 \x01(\v2\n" +
	".dtako.RowR\tdtakoNext\x129\n" +
	"\x12is_next_oroshi_fst\x18\x06 \x01(\v2\f.dtako.EventR\x0fisNextOroshiFst\x12;\n" +
	"\x13is_last_oroshi_last\x18\a \x01(\v2\f.dtako.EventR\x10isLastOroshiLast\x12\"\n" +
	"\x04detc\x18\b \x03(\v2\x0e.dtako.EtcDataR\x04detc\x12*\n" +
	"\x05ddetc\x18\t \x03(\v2\x14.dtako.EtcMeisaiDataR\x05ddetc\x12(\n" +
	"\x10ddetc_srch_count\x18\n" +
	" \x01(\x05R\x0eddetcSrchCount\x12(\n" +
	"\x06dferry\x18\v \x03(\v2\x10.dtako.FerryDataR\x06dferry\x12)\n" +
	"\x06ichi_r\x18\f \x03(\v2\x12.dtako.IchibanDataR\x05ichiR\x12&\n" +
	"\x05keihi\x18\r \x03(\v2\x10.dtako.KeihiDataR\x05keihi\x121\n" +
	"\bd_uriage\x18\x0e \x03(\v2\x16.dtako.UriageKeihiDataR\adUriage\x12.\n" +
	"\n" +
	"ryohi_rows\x18\x0f \x03(\v2\x0f.dtako.RyohiRowR\tryohiRows\x12/\n" +
	"\n" +
	"fuel_tanka\x18\x10 \x01(\v2\x10.dtako.FuelTankaR\tfuelTanka\x12/\n" +
	"\ftsumi_oroshi\x18\x11 \x03(\v2\f.dtako.EventR\vtsumiOroshi\"[\n" +
	"\x0fTsumiOroshiPair\x12\"\n" +
	"\x05tsumi\x18\x01 \x01(\v2\f.dtako.EventR\x05tsumi\x12$\n" +
	"\x06oroshi\x18\x02 \x01(\v2\f.dtako.EventR\x06oroshi\"\xd1\x04\n" +
	"\x03Row\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aunko_no\x18\x02 \x01(\tR\x06unkoNo\x12\x16\n" +
	"\x06shaban\x18\x03 \x01(\tR\x06shaban\x12\x1b\n" +
	"\tdriver_id\x18\x04 \x01(\tR\bdriverId\x12A\n" +
	"\x0estart_datetime\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\rstartDatetime\x12=\n" +
	"\fend_datetime\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vendDatetime\x12\x1a\n" +
	"\bdistance\x18\a \x01(\x01R\bdistance\x12\x1b\n" +
	"\tfuel_used\x18\b \x01(\x01R\bfuelUsed\x12\x1d\n" +
	"\n" +
	"sharyou_cc\x18\t \x01(\tR\tsharyouCc\x12\x1d\n" +
	"\n" +
	"jomuin_cd1\x18\n" +
	" \x01(\tR\tjomuinCd1\x120\n" +
	"\x14taishou_jomuin_kubun\x18\v \x01(\x05R\x12taishouJomuinKubun\x129\n" +
	"\n" +
	"created_at\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x15 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12$\n" +
	"\x06events\x18\x1e \x03(\v2\f.dtako.EventR\x06events\x12%\n" +
	"\x06driver\x18\x1f \x01(\v2\r.dtako.DriverR\x06driver\"0\n" +
	"\x06Driver\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\xb1\x02\n" +
	"\aEtcData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aunko_no\x18\x02 \x01(\tR\x06unkoNo\x12A\n" +
	"\x0estart_datetime\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\rstartDatetime\x12=\n" +
	"\fend_datetime\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vendDatetime\x12\x10\n" +
	"\x03etc\x18\x05 \x01(\x05R\x03etc\x12/\n" +
	"\x05tsumi\x18\n" +
	" \x03(\v2\x19.dtako.EtcData.TsumiEntryR\x05tsumi\x1a8\n" +
	"\n" +
	"TsumiEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x92\x03\n" +
	"\rEtcMeisaiData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\fdtako_row_id\x18\x02 \x01(\tR\n" +
	"dtakoRowId\x123\n" +
	"\adate_fr\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06dateFr\x123\n" +
	"\adate_to\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06dateTo\x12\x18\n" +
	"\akingaku\x18\x05 \x01(\x05R\akingaku\x12\x14\n" +
	"\x05jisha\x18\n" +
	" \x01(\x05R\x05jisha\x125\n" +
	"\x05tsumi\x18\v \x03(\v2\x1f.dtako.EtcMeisaiData.TsumiEntryR\x05tsumi\x12D\n" +
	"\x12dtako_uriage_keihi\x18\f \x01(\v2\x16.dtako.UriageKeihiDataR\x10dtakoUriageKeihi\x1a8\n" +
	"\n" +
	"TsumiEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xef\x01\n" +
	"\tFerryData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aunko_no\x18\x02 \x01(\tR\x06unkoNo\x12A\n" +
	"\x0estart_datetime\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\rstartDatetime\x12=\n" +
	"\fend_datetime\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vendDatetime\x12\x1d\n" +
	"\n" +
	"ferry_name\x18\x05 \x01(\tR\tferryName\x12\x18\n" +
	"\akingaku\x18\x06 \x01(\x05R\akingaku\"\xb9\x04\n" +
	"\vIchibanData\x12\x1d\n" +
	"\n" +
	"sharyou_cc\x18\x01 \x01(\tR\tsharyouCc\x12#\n" +
	"\rtsumikomi_ymd\x18\x02 \x01(\tR\ftsumikomiYmd\x12\x19\n" +
	"\bunko_ymd\x18\x03 \x01(\tR\aunkoYmd\x12\x1f\n" +
	"\vnounyuu_ymd\x18\x04 \x01(\tR\n" +
	"nounyuuYmd\x12\x1d\n" +
	"\n" +
	"hatsuchi_n\x18\x05 \x01(\tR\thatsuchiN\x12\x1d\n" +
	"\n" +
	"chakuchi_n\x18\x06 \x01(\tR\tchakuchiN\x12\x19\n" +
	"\bhinmei_n\x18\a \x01(\tR\ahinmeiN\x12\x1f\n" +
	"\vtokuisaki_n\x18\b \x01(\tR\n" +
	"tokuisakiN\x12!\n" +
	"\ftokuisaki_cc\x18\t \x01(\tR\vtokuisakiCc\x12\x12\n" +
	"\x04biko\x18\n" +
	" \x01(\tR\x04biko\x12\x14\n" +
	"\x05biko2\x18\v \x01(\tR\x05biko2\x12\x19\n" +
	"\bseikyu_k\x18\f \x01(\x05R\aseikyuK\x12\x17\n" +
	"\ashain_n\x18\r \x01(\tR\x06shainN\x12\x1b\n" +
	"\tuntensh_c\x18\x0e \x01(\tR\buntenshC\x12\x18\n" +
	"\akingaku\x18\x0f \x01(\x05R\akingaku\x12\x16\n" +
	"\x06nebiki\x18\x10 \x01(\x05R\x06nebiki\x12\x1c\n" +
	"\twarimashi\x18\x11 \x01(\x05R\twarimashi\x12\x14\n" +
	"\x05jippi\x18\x12 \x01(\x05R\x05jippi\x12,\n" +
	"\x12nyuuryoku_tantou_n\x18\x13 \x01(\tR\x10nyuuryokuTantouN\"\x9a\x02\n" +
	"\tKeihiData\x12\x1d\n" +
	"\n" +
	"sharyou_cc\x18\x01 \x01(\tR\tsharyouCc\x12\x19\n" +
	"\bunko_ymd\x18\x02 \x01(\tR\aunkoYmd\x12\x1d\n" +
	"\n" +
	"keijou_ymd\x18\x03 \x01(\tR\tkeijouYmd\x12\x18\n" +
	"\asuuryou\x18\x04 \x01(\x01R\asuuryou\x12\x14\n" +
	"\x05tanka\x18\x05 \x01(\x01R\x05tanka\x12\x18\n" +
	"\akingaku\x18\x06 \x01(\x05R\akingaku\x12\x12\n" +
	"\x04biko\x18\a \x01(\tR\x04biko\x12\x17\n" +
	"\akeihi_n\x18\b \x01(\tR\x06keihiN\x12\x17\n" +
	"\akeihi_c\x18\t \x01(\tR\x06keihiC\x12$\n" +
	"\x0emiharai_saki_n\x18\n" +
	" \x01(\tR\fmiharaiSakiN\"\xec\x01\n" +
	"\x0fUriageKeihiData\x12\x17\n" +
	"\asrch_id\x18\x01 \x01(\tR\x06srchId\x12 \n" +
	"\fdtako_row_id\x18\x02 \x01(\tR\n" +
	"dtakoRowId\x12\x17\n" +
	"\akeihi_c\x18\x03 \x01(\x05R\x06keihiC\x126\n" +
	"\bdatetime\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bdatetime\x12\x18\n" +
	"\akingaku\x18\x05 \x01(\x05R\akingaku\x123\n" +
	"\bchildren\x18\n" +
	" \x03(\v2\x17.dtako.UriageKeihiChildR\bchildren\"j\n" +
	"\x10UriageKeihiChild\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12$\n" +
	"\x0eparent_srch_id\x18\x02 \x01(\tR\fparentSrchId\x12 \n" +
	"\fdtako_row_id\x18\x03 \x01(\tR\n" +
	"dtakoRowId\"\x9f\x02\n" +
	"\bRyohiRow\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\aunko_no\x18\x02 \x01(\tR\x06unkoNo\x12\x1d\n" +
	"\n" +
	"tsumi_date\x18\x03 \x01(\tR\ttsumiDate\x12\x1f\n" +
	"\voroshi_date\x18\x04 \x01(\tR\n" +
	"oroshiDate\x12\x1c\n" +
	"\ttokuisaki\x18\x05 \x01(\tR\ttokuisaki\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\">\n" +
	"\tFuelTanka\x12\x1b\n" +
	"\tmonth_int\x18\x01 \x01(\x05R\bmonthInt\x12\x14\n" +
	"\x05tanka\x18\x02 \x01(\x01R\x05tanka\"0\n" +
	"\x10CreateRowRequest\x12\x1c\n" +
	"\x03row\x18\x01 \x01(\v2\n" +
	".dtako.RowR\x03row\"\x1f\n" +
	"\rGetRowRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"0\n" +
	"\x10UpdateRowRequest\x12\x1c\n" +
	"\x03row\x18\x01 \x01(\v2\n" +
	".dtako.RowR\x03row\"\"\n" +
	"\x10DeleteRowRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"-\n" +
	"\x11DeleteRowResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"Z\n" +
	"\x0fListRowsRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\"H\n" +
	"\x10ListRowsResponse\x12\x1e\n" +
	"\x04rows\x18\x01 \x03(\v2\n" +
	".dtako.RowR\x04rows\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xb6\x01\n" +
	"\x11SearchRowsRequest\x127\n" +
	"\tdate_from\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bdateFrom\x123\n" +
	"\adate_to\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x06dateTo\x12\x1b\n" +
	"\tdriver_id\x18\x03 \x01(\tR\bdriverId\x12\x16\n" +
	"\x06shaban\x18\x04 \x01(\tR\x06shaban\"\x9b\x01\n" +
	"\x13ShabanSearchRequest\x12\x16\n" +
	"\x06shaban\x18\x01 \x01(\tR\x06shaban\x127\n" +
	"\tdate_from\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bdateFrom\x123\n" +
	"\adate_to\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06dateTo2\xef\x03\n" +
	"\x0fDtakoRowService\x12G\n" +
	"\fGetRowDetail\x12\x1a.dtako.GetRowDetailRequest\x1a\x1b.dtako.GetRowDetailResponse\x120\n" +
	"\tCreateRow\x12\x17.dtako.CreateRowRequest\x1a\n" +
	".dtako.Row\x12*\n" +
	"\x06GetRow\x12\x14.dtako.GetRowRequest\x1a\n" +
	".dtako.Row\x120\n" +
	"\tUpdateRow\x12\x17.dtako.UpdateRowRequest\x1a\n" +
	".dtako.Row\x12>\n" +
	"\tDeleteRow\x12\x17.dtako.DeleteRowRequest\x1a\x18.dtako.DeleteRowResponse\x12;\n" +
	"\bListRows\x12\x16.dtako.ListRowsRequest\x1a\x17.dtako.ListRowsResponse\x12?\n" +
	"\n" +
	"SearchRows\x12\x18.dtako.SearchRowsRequest\x1a\x17.dtako.ListRowsResponse\x12E\n" +
	"\x0eSearchByShaban\x12\x1a.dtako.ShabanSearchRequest\x1a\x17.dtako.ListRowsResponseB3Z1github.com/yhonda-ohishi/dtako_events/proto;dtakob\x06proto3"

var (
	file_proto_dtako_rows_proto_rawDescOnce sync.Once
	file_proto_dtako_rows_proto_rawDescData []byte
)

func file_proto_dtako_rows_proto_rawDescGZIP() []byte {
	file_proto_dtako_rows_proto_rawDescOnce.Do(func() {
		file_proto_dtako_rows_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_dtako_rows_proto_rawDesc), len(file_proto_dtako_rows_proto_rawDesc)))
	})
	return file_proto_dtako_rows_proto_rawDescData
}

var file_proto_dtako_rows_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_dtako_rows_proto_goTypes = []any{
	(*GetRowDetailRequest)(nil),   // 0: dtako.GetRowDetailRequest
	(*GetRowDetailResponse)(nil),  // 1: dtako.GetRowDetailResponse
	(*TsumiOroshiPair)(nil),       // 2: dtako.TsumiOroshiPair
	(*Row)(nil),                   // 3: dtako.Row
	(*Driver)(nil),                // 4: dtako.Driver
	(*EtcData)(nil),               // 5: dtako.EtcData
	(*EtcMeisaiData)(nil),         // 6: dtako.EtcMeisaiData
	(*FerryData)(nil),             // 7: dtako.FerryData
	(*IchibanData)(nil),           // 8: dtako.IchibanData
	(*KeihiData)(nil),             // 9: dtako.KeihiData
	(*UriageKeihiData)(nil),       // 10: dtako.UriageKeihiData
	(*UriageKeihiChild)(nil),      // 11: dtako.UriageKeihiChild
	(*RyohiRow)(nil),              // 12: dtako.RyohiRow
	(*FuelTanka)(nil),             // 13: dtako.FuelTanka
	(*CreateRowRequest)(nil),      // 14: dtako.CreateRowRequest
	(*GetRowRequest)(nil),         // 15: dtako.GetRowRequest
	(*UpdateRowRequest)(nil),      // 16: dtako.UpdateRowRequest
	(*DeleteRowRequest)(nil),      // 17: dtako.DeleteRowRequest
	(*DeleteRowResponse)(nil),     // 18: dtako.DeleteRowResponse
	(*ListRowsRequest)(nil),       // 19: dtako.ListRowsRequest
	(*ListRowsResponse)(nil),      // 20: dtako.ListRowsResponse
	(*SearchRowsRequest)(nil),     // 21: dtako.SearchRowsRequest
	(*ShabanSearchRequest)(nil),   // 22: dtako.ShabanSearchRequest
	nil,                           // 23: dtako.EtcData.TsumiEntry
	nil,                           // 24: dtako.EtcMeisaiData.TsumiEntry
	(*Event)(nil),                 // 25: dtako.Event
	(*timestamppb.Timestamp)(nil), // 26: google.protobuf.Timestamp
}
var file_proto_dtako_rows_proto_depIdxs = []int32{
	3,  // 0: dtako.GetRowDetailResponse.dtako_row:type_name -> dtako.Row
	25, // 1: dtako.GetRowDetailResponse.events:type_name -> dtako.Event
	2,  // 2: dtako.GetRowDetailResponse.tsumi_oroshi_pairs:type_name -> dtako.TsumiOroshiPair
	3,  // 3: dtako.GetRowDetailResponse.dtako_last:type_name -> dtako.Row
	3,  // 4: dtako.GetRowDetailResponse.dtako_next:type_name -> dtako.Row
	25, // 5: dtako.GetRowDetailResponse.is_next_oroshi_fst:type_name -> dtako.Event
	25, // 6: dtako.GetRowDetailResponse.is_last_oroshi_last:type_name -> dtako.Event
	5,  // 7: dtako.GetRowDetailResponse.detc:type_name -> dtako.EtcData
	6,  // 8: dtako.GetRowDetailResponse.ddetc:type_name -> dtako.EtcMeisaiData
	7,  // 9: dtako.GetRowDetailResponse.dferry:type_name -> dtako.FerryData
	8,  // 10: dtako.GetRowDetailResponse.ichi_r:type_name -> dtako.IchibanData
	9,  // 11: dtako.GetRowDetailResponse.keihi:type_name -> dtako.KeihiData
	10, // 12: dtako.GetRowDetailResponse.d_uriage:type_name -> dtako.UriageKeihiData
	12, // 13: dtako.GetRowDetailResponse.ryohi_rows:type_name -> dtako.RyohiRow
	13, // 14: dtako.GetRowDetailResponse.fuel_tanka:type_name -> dtako.FuelTanka
	25, // 15: dtako.GetRowDetailResponse.tsumi_oroshi:type_name -> dtako.Event
	25, // 16: dtako.TsumiOroshiPair.tsumi:type_name -> dtako.Event
	25, // 17: dtako.TsumiOroshiPair.oroshi:type_name -> dtako.Event
	26, // 18: dtako.Row.start_datetime:type_name -> google.protobuf.Timestamp
	26, // 19: dtako.Row.end_datetime:type_name -> google.protobuf.Timestamp
	26, // 20: dtako.Row.created_at:type_name -> google.protobuf.Timestamp
	26, // 21: dtako.Row.updated_at:type_name -> google.protobuf.Timestamp
	25, // 22: dtako.Row.events:type_name -> dtako.Event
	4,  // 23: dtako.Row.driver:type_name -> dtako.Driver
	26, // 24: dtako.EtcData.start_datetime:type_name -> google.protobuf.Timestamp
	26, // 25: dtako.EtcData.end_datetime:type_name -> google.protobuf.Timestamp
	23, // 26: dtako.EtcData.tsumi:type_name -> dtako.EtcData.TsumiEntry
	26, // 27: dtako.EtcMeisaiData.date_fr:type_name -> google.protobuf.Timestamp
	26, // 28: dtako.EtcMeisaiData.date_to:type_name -> google.protobuf.Timestamp
	24, // 29: dtako.EtcMeisaiData.tsumi:type_name -> dtako.EtcMeisaiData.TsumiEntry
	10, // 30: dtako.EtcMeisaiData.dtako_uriage_keihi:type_name -> dtako.UriageKeihiData
	26, // 31: dtako.FerryData.start_datetime:type_name -> google.protobuf.Timestamp
	26, // 32: dtako.FerryData.end_datetime:type_name -> google.protobuf.Timestamp
	26, // 33: dtako.UriageKeihiData.datetime:type_name -> google.protobuf.Timestamp
	11, // 34: dtako.UriageKeihiData.children:type_name -> dtako.UriageKeihiChild
	26, // 35: dtako.RyohiRow.created_at:type_name -> google.protobuf.Timestamp
	26, // 36: dtako.RyohiRow.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 37: dtako.CreateRowRequest.row:type_name -> dtako.Row
	3,  // 38: dtako.UpdateRowRequest.row:type_name -> dtako.Row
	3,  // 39: dtako.ListRowsResponse.rows:type_name -> dtako.Row
	26, // 40: dtako.SearchRowsRequest.date_from:type_name -> google.protobuf.Timestamp
	26, // 41: dtako.SearchRowsRequest.date_to:type_name -> google.protobuf.Timestamp
	26, // 42: dtako.ShabanSearchRequest.date_from:type_name -> google.protobuf.Timestamp
	26, // 43: dtako.ShabanSearchRequest.date_to:type_name -> google.protobuf.Timestamp
	0,  // 44: dtako.DtakoRowService.GetRowDetail:input_type -> dtako.GetRowDetailRequest
	14, // 45: dtako.DtakoRowService.CreateRow:input_type -> dtako.CreateRowRequest
	15, // 46: dtako.DtakoRowService.GetRow:input_type -> dtako.GetRowRequest
	16, // 47: dtako.DtakoRowService.UpdateRow:input_type -> dtako.UpdateRowRequest
	17, // 48: dtako.DtakoRowService.DeleteRow:input_type -> dtako.DeleteRowRequest
	19, // 49: dtako.DtakoRowService.ListRows:input_type -> dtako.ListRowsRequest
	21, // 50: dtako.DtakoRowService.SearchRows:input_type -> dtako.SearchRowsRequest
	22, // 51: dtako.DtakoRowService.SearchByShaban:input_type -> dtako.ShabanSearchRequest
	1,  // 52: dtako.DtakoRowService.GetRowDetail:output_type -> dtako.GetRowDetailResponse
	3,  // 53: dtako.DtakoRowService.CreateRow:output_type -> dtako.Row
	3,  // 54: dtako.DtakoRowService.GetRow:output_type -> dtako.Row
	3,  // 55: dtako.DtakoRowService.UpdateRow:output_type -> dtako.Row
	18, // 56: dtako.DtakoRowService.DeleteRow:output_type -> dtako.DeleteRowResponse
	20, // 57: dtako.DtakoRowService.ListRows:output_type -> dtako.ListRowsResponse
	20, // 58: dtako.DtakoRowService.SearchRows:output_type -> dtako.ListRowsResponse
	20, // 59: dtako.DtakoRowService.SearchByShaban:output_type -> dtako.ListRowsResponse
	52, // [52:60] is the sub-list for method output_type
	44, // [44:52] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_proto_dtako_rows_proto_init() }
func file_proto_dtako_rows_proto_init() {
	if File_proto_dtako_rows_proto != nil {
		return
	}
	file_proto_dtako_events_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_dtako_rows_proto_rawDesc), len(file_proto_dtako_rows_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dtako_rows_proto_goTypes,
		DependencyIndexes: file_proto_dtako_rows_proto_depIdxs,
		MessageInfos:      file_proto_dtako_rows_proto_msgTypes,
	}.Build()
	File_proto_dtako_rows_proto = out.File
	file_proto_dtako_rows_proto_goTypes = nil
	file_proto_dtako_rows_proto_depIdxs = nil
}
